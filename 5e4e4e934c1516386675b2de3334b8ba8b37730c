{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "16f5b1a8_30216d42",
        "filename": "include/libyuv/rotate_row.h",
        "patchSetId": 1
      },
      "lineNbr": 33,
      "author": {
        "id": 1001562
      },
      "writtenOn": "2024-07-23T17:38:37Z",
      "side": 1,
      "message": "Nit: As I asked elsewhere, should we also define `LIBYUV_DISABLE_SME` for non-clang compilers such as GCC and MSVC?",
      "revId": "5e4e4e934c1516386675b2de3334b8ba8b37730c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "87894832_d3195949",
        "filename": "include/libyuv/rotate_row.h",
        "patchSetId": 1
      },
      "lineNbr": 33,
      "author": {
        "id": 1115898
      },
      "writtenOn": "2024-07-23T17:41:27Z",
      "side": 1,
      "message": "GCC will use the same code and should work but the version # expected is unknown, so I think wait til we have more information.\n__aarch64__ is for gcc/clang, so Visual C wont enable any SME row functions",
      "parentUuid": "16f5b1a8_30216d42",
      "revId": "5e4e4e934c1516386675b2de3334b8ba8b37730c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "69b07955_0f87363d",
        "filename": "include/libyuv/rotate_row.h",
        "patchSetId": 1
      },
      "lineNbr": 33,
      "author": {
        "id": 1001562
      },
      "writtenOn": "2024-07-23T17:45:15Z",
      "side": 1,
      "message": "Thanks for the reply. In that case we should define `LIBYUV_DISABLE_SME` for all versions of GCC. If clang also defines `__GNUC__`, we will need to detect genuine GCC carefully.",
      "parentUuid": "87894832_d3195949",
      "revId": "5e4e4e934c1516386675b2de3334b8ba8b37730c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "632024e3_042ddeb2",
        "filename": "include/libyuv/rotate_row.h",
        "patchSetId": 1
      },
      "lineNbr": 33,
      "author": {
        "id": 1115898
      },
      "writtenOn": "2024-07-23T17:58:26Z",
      "side": 1,
      "message": "In row.h we have more version checking.  An example of GCC version checking is\n\n// GCC \u003e\u003d 4.7.0 required for AVX2.\n#if defined(__GNUC__) \u0026\u0026 (defined(__x86_64__) || defined(__i386__))\n#if (__GNUC__ \u003e 4) || (__GNUC__ \u003d\u003d 4 \u0026\u0026 (__GNUC_MINOR__ \u003e\u003d 7))\n#define GCC_HAS_AVX2 1\n#endif  // GNUC \u003e\u003d 4.7\n#endif  // __GNUC__\n\nSo we\u0027ll probably do more in that form, if there are SME functions useful to libyuv.\nIn general, intrinsics are expected to be portable to all compilers.\nThe LIBYUV_DISABLE_SME provides applications a mechanism to disable SME, but we havent tested all compilers to know what restrictions there will be.\nI\u0027d prefer enable SME and we\u0027ll get a bug report once someone tries it on a different OS/compiler",
      "parentUuid": "69b07955_0f87363d",
      "revId": "5e4e4e934c1516386675b2de3334b8ba8b37730c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}